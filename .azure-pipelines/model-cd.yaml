trigger:
  branches:
    include:
    - main
  paths:
    include:
    - endpoints/*
    - src/*

pool:
  vmImage: ubuntu-latest

variables:
- name: SERVICECONNECTION
  value: rg-dataplatform-dev
- name: WORKSPACENAME
  value: aa-ml-aml-workspace-dev
- name: RESOURCEGROUPNAME
  value: Analytics.Aml.Experiments.Workspaces
- name: KEYVAULTNAME
  value: aamlamlwkeyvaultybrafcos
- name: modelName
  value: hate-pt-speech
- name: description
  value: 'A hate detection model for tweets in portuguese'
- name: condaEnvName
  value: transformers-torch-19
- name: env
  value: dev

stages:
- stage: aml_model_integrate
  displayName: Model - Build
  jobs:
  - job: train
    displayName: Model training
    steps:
      - template: templates/aml-cli-install/step.yaml
        parameters:
          componentSupport: false
          minVersion: 2.0
      - template: templates/aml-env-ensure/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          envFile: services/post-processing/source/environments/${{ variables.condaEnvName }}/environment.yml
          validateOnly: true
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
      - template: templates/aml-job-create/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          name: ${{ variables.modelName }}
          jobFile: services/post-processing/source/jobs/hatedetection/tune.job.yml
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
          noWait: false

- stage: aml_model_registration
  displayName: Model - Source control
  jobs:
  - deployment: model_registration
    displayName: Model registration
    environment: amlworkspace_$(env)
    variables:
      jobName: $[ stageDependencies.aml_model_integrate.train.outputs['jobRun.jobName'] ]
    strategy: 
      runOnce:
        deploy:
          steps:
            - checkout: self
            - template: templates/aml-cli-install/step.yaml
              parameters:
                componentSupport: false
                minVersion: 2.0
            - template: templates/aml-model-register/step.yaml
              parameters:
                azureServiceConnectionName: $(SERVICECONNECTION)
                name: ${{ variables.modelName }}
                fromJob: true
                jobName: $(jobName)
                description: $(description)
                modelPath: outputs/hate-pt-speech.zip
                modelVersion: latest
                workspaceName: $(WORKSPACENAME)
                resourceGroup: $(RESOURCEGROUPNAME)
                workspaceConfig: services/post-processing/source/workspaces/dev/workspace.json

- stage: aml_model_evaluate
  displayName: Model - Evaluation
  jobs:
  - job: evaluate
    displayName: Model evaluation
    steps:
      - template: templates/aml-cli-install/step.yaml
        parameters:
          componentSupport: false
          minVersion: 2.0
      - template: templates/aml-env-ensure/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          envFile: services/post-processing/source/environments/${{ variables.condaEnvName}}/environment.yml
          validateOnly: true
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
      - template: templates/aml-model-compare/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          modelName: ${{ variables.modelName }}
          champion: current
          challenger: latest
          endpoint: services/post-processing/source/endpoints/hate-pt-speech/endpoint.yml
          compareBy: eval_recall
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
          workspaceConfig: services/post-processing/source/workspaces/dev/workspace.json

- stage: aml_model_deployment
  displayName: Model - Deployment
  dependsOn: aml_model_evaluate
  condition: eq(stageDependencies.aml_model_evaluate.evaluate.outputs['compare.result'], 'true')
  jobs:
  - deployment: model_deployment
    displayName: Model deployment
    environment: amlworkspace_$(env)
    strategy: 
      runOnce:
        deploy:
          steps:
            - template: templates/aml-cli-install/step.yaml
              parameters:
                componentSupport: false
                minVersion: 2.0
            - checkout: self
            - template: templates/aml-endpoint-deploy/step.yaml
              parameters:
                azureServiceConnectionName: $(SERVICECONNECTION)
                endpointFile: services/post-processing/source/endpoints/*/endpoint.yml
                deploymentFile: deployments/*.yml
                workspaceName: $(WORKSPACENAME)
                resourceGroup: $(RESOURCEGROUPNAME)
                secretsToKeyVault: true
                keyVaultName: $(KEYVAULTNAME)
