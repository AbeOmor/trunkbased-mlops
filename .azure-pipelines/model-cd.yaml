trigger: none

resources:
  pipelines:
  - pipeline: model-CT
    source: model-CT
    trigger: 
      branches:
        include: 
        - main

pool:
  vmImage: ubuntu-latest

variables:
  - template: variables.group.yaml

stages:
- stage: aml_model_evaluate
  displayName: Model - Evaluation
  jobs:
  - job: evaluate
    displayName: Model evaluation
    steps:
      - template: templates/aml-cli-install/step.yaml
        parameters:
          componentSupport: false
          minVersion: 2.0
          pythonTools: true

      - template: templates/aml-job-create/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          stepDisplayName: Computing McNemar statistic
          name: ${{ variables.modelName }}-eval
          jobFile: jobs/hatedetection/evaluate.job.yml
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
          noWait: false

      - template: templates/aml-job-metric-assert/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          stepDisplayName: Verifying evaluation
          jobName: $(jobRun.jobName)
          metric: pvalue
          expecting: 0.05
          dataType: float
          greaterIsBetter: false
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)
          failureMessage: Unable to conclude if challenger is better than champion.

      - template: templates/aml-model-compare/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          modelName: ${{ variables.modelName }}
          champion: stage=production
          challenger: latest
          compareBy: eval_recall
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)

      - template: templates/aml-model-set/step.yaml
        parameters:
          azureServiceConnectionName: $(SERVICECONNECTION)
          modelName: ${{ variables.modelName }}
          modelVersion: latest
          property: stage
          value: staged
          exclusive: true
          replaceExistingWith: unstaged
          workspaceName: $(WORKSPACENAME)
          resourceGroup: $(RESOURCEGROUPNAME)

- stage: aml_model_deployment
  displayName: Model - Deployment
  dependsOn: aml_model_evaluate
  condition: and(eq(dependencies.aml_model_evaluate.outputs['evaluate.jobMetricAssert.result'], 'true'), eq(dependencies.aml_model_evaluate.outputs['evaluate.compare.result'], 'true'))
  jobs:
  - deployment: model_deployment
    displayName: Model deployment
    environment: amlworkspace_$(env)
    strategy: 
      runOnce:
        deploy:
          steps:
            - checkout: self
            - template: templates/aml-cli-install/step.yaml
              parameters:
                componentSupport: false
                minVersion: 2.0
                pythonTools: true

            - template: templates/aml-model-set/step.yaml
              parameters:
                azureServiceConnectionName: $(SERVICECONNECTION)
                modelName: ${{ variables.modelName }}
                #modelVersion: $(deployment.deployedVersion)
                modelVersion: latest
                property: stage
                value: production
                exclusive: true
                replaceExistingWith: surpassed
                workspaceName: $(WORKSPACENAME)
                resourceGroup: $(RESOURCEGROUPNAME)

            - template: templates/aml-endpoint-deploy/step.yaml
              parameters:
                azureServiceConnectionName: $(SERVICECONNECTION)
                endpointFile: endpoints/*/endpoint.yml
                deploymentFile: deployments/*.yml
                workspaceName: $(WORKSPACENAME)
                resourceGroup: $(RESOURCEGROUPNAME)
                secretsToKeyVault: true
                keyVaultName: $(KEYVAULTNAME)


