parameters:
- name: azureServiceConnectionName
  type: string
- name: jobName
  type: string
- name: metric
  type: string
- name: expecting
  type: string
- name: dataType
  type: string
- name: greaterIsBetter
  type: boolean
  default: true
- name: workspaceName
  type: string
- name: resourceGroup
  type: string
- name: workspaceConfig
  type: string
- name: stepDisplayName
  type: string
  default: Validating metric
- name: failureMessage
  type: string

steps:
  - task: AzureCLI@2
    name: jobMetricAssert
    displayName: ${{ parameters.stepDisplayName }}
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      inlineScript: |
        pip install azureml-core==1.37.0
        pip install azure-cli-core==2.30.0
        
        echo "##[debug] Looking for metric ${{ parameters.metric }} at job ${{ parameters.jobName }}."
        echo "##[debug] Expecting value ${{ parameters.expecting }} (of type ${{ parameters.dataType }}). Greater values are better? ${{ parameters.greaterIsBetter }}"

        python $(Build.SourcesDirectory)/.azure-pipelines/templates/aml-job-metric-assert/assert.py \
          --ws-config ${{ parameters.workspaceConfig }} \
          --job-name ${{ parameters.jobName }} \
          --metric ${{ parameters.metric }} \
          --expected ${{ parameters.expecting }} \
          --data-type ${{ parameters.dataType }} \
          --greater-is-better ${{ parameters.greaterIsBetter }}
        
        # assert.py will return true or false. false is encoded as 0 en bash and any other value is true.
        if [[ $? == 0 ]]; then
          echo "##vso[task.logissue type=warning;]${{ parameters.failureMessage }}."
          echo "##vso[task.setvariable variable=result;isOutput=true]false"
        else
          echo "##[debug]Assertion returned true."
          echo "##vso[task.setvariable variable=result;isOutput=true]true"
        fi
    target:
      settableVariables:
      - result
