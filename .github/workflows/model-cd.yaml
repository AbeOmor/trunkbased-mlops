name: model-CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["model-ct"]
    branches: [main]
    types:
      - completed

jobs:
  evaluation:
    environment: dev
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: .github/variables.yaml

      - id: job_preparation
        name: Installing dependencies
        uses: ./.github/actions/aml-cli-install
        with:
          componentSupport: false
          minVersion: 2.0
          pythonTools: true

      - name: Logining in into Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Moving model's stage
        uses: ./.github/actions/aml-model-set
        with:
          modelName: ${MODELNAME}
          modelVersion: latest
          property: stage
          value: staged
          exclusive: true
          replaceExistingWith: unstaged
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}

  deployment:
    environment: amlworkspace_dev
    runs-on: ubuntu-latest
    needs: evaluation
    steps:
      - uses: actions/checkout@v2

      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: .github/variables.yaml

      - id: job_preparation
        name: Installing dependencies
        uses: ./.github/actions/aml-cli-install
        with:
          componentSupport: false
          minVersion: 2.0
          pythonTools: true

      - name: Logining in into Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Moving model's stage
        uses: ./.github/actions/aml-model-set
        with:
          modelName: ${MODELNAME}
          modelVersion: latest
          property: stage
          value: production
          exclusive: true
          isMlflowStage: true
          replaceExistingWith: archived
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
      
      - name: Deploying models
        id: deployment
        uses: ./.github/actions/aml-endpoint-deploy
        with:
          endpointFile: .aml/endpoints/*/endpoint.yml
          deploymentFile: deployments/*.yml
          modelVersion: latest
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
          secretsToKeyVault: false
          keyVaultName: ${KEYVAULTNAME}

  
